parameters:

- name: serviceConnection # Service Connection used to connect to Azure SQL
  default: ''
  displayName: Service Connection Used to connect to Azure Storage
- name: sqlServerName # SqlServerName, e.g. for <my-sql-server-name>.database.windows.net use my-sql-server-name
  default: ''
  displayName: SQL Server Name, e.g. for <my-sql-server-name>.database.windows.net use my-sql-server-name
- name: sqlServerDbName # SQL Server DB Name
  default: ''
  displayName: SQL Database Name
- name: containerRegistry # ACR Name which has broadsea-methods image e.g. for myacr.azurecr.io, use `myacr`
  default: ''
  displayName: ACR Name which has broadsea-methods image e.g. for myacr.azurecr.io, use `myacr`
- name: broadseaMethodsAcrImageTag # Image:Tag for broadsea-methods container in ACR, e.g. broadsea-methods:latest
  default: 'broadsea-methods:latest'
  displayName: Image:Tag for broadsea-methods container in ACR, e.g. broadsea-methods:latest
- name: achillesSmokeTestScriptFileName # Achilles Smoke Test Script File name e.g. `achilles-test.R`
  default: 'achilles-test.R'
  displayName: Achilles Smoke Test Script File name e.g. `achilles-test.R`

steps:
- task: AzureCLI@2
  displayName: 'Smoke Test - Validate Achilles Characterization'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      # test to see the list of images in ACR.
      az acr repository list -n "${{ parameters.containerRegistry }}"

      TOKEN=$(az acr login --name "${{ parameters.containerRegistry }}" --expose-token --output tsv --query accessToken)

      sudo docker login ${{ parameters.containerRegistry }}.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password $TOKEN
      echo "Smoke Test"

      echo "docker run -t --rm -v "$PWD":/home/docker -w /home/docker \
      -e SQL_SERVER_NAME=$SQL_SERVER_NAME -e $SQL_DATABASE_NAME ${{ parameters.broadseaMethodsAcrImageTag }} Rscript ${{ parameters.achillesSmokeTestScriptFileName}}"

      sudo docker run -t --rm -v "$PWD":/home/docker -w /home/docker \
      -e SQL_SERVER_NAME=$SQL_SERVER_NAME -e SQL_DATABASE_NAME=$SQL_DATABASE_NAME "${{ parameters.broadseaMethodsAcrImageTag }}" Rscript "${{ parameters.achillesSmokeTestScriptFileName}}"
  env:
    SQL_SERVER_NAME: ${{ parameters.sqlServerName }}
    SQL_DATABASE_NAME: ${{ parameters.sqlServerDbName }}

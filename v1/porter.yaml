# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: ohdsi-on-azure
version: 0.1.0
description: "Setup OHDSI on Azure"
# TODO: update the registry to your own, e.g. myregistry
registry: ohdsionazure

# If you want to customize the Dockerfile in use, uncomment the line below and update the referenced file.
# See https://porter.sh/custom-dockerfile/
dockerfile: Dockerfile.tmpl

credentials:
  - name: azure_tenant_id
    env: AZURE_TENANT_ID
  - name: azure_subscription_id
    env: AZURE_SUBSCRIPTION_ID
  - name: azure_client_id
    env: AZURE_CLIENT_ID
  - name: azure_client_object_id
    env: AZURE_CLIENT_OBJECT_ID
  - name: azure_client_secret
    env: AZURE_CLIENT_SECRET
  - name: azure_storage_account_key
    env: AZURE_STORAGE_ACCOUNT_KEY
  - name: omop_password
    env: OMOP_PASSWORD
  - name: ado_pat
    env: ADO_PAT
  - name: admin_user_jumpbox
    env: ADMIN_USER_JUMPBOX
  - name: admin_password_jumpbox
    env: ADMIN_PASSWORD_JUMPBOX
  - name: admin_user
    env: ADMIN_USER
  - name: admin_password
    env: ADMIN_PASSWORD

parameters:
  - name: ado_project_url
    type: string
    description: Azure DevOps Project URL e.g. https://dev.azure.com/<my-org>/<my-project>
  - name: ado_organization_url
    type: string
    description: Azure DevOps Organization URL e.g. https://dev.azure.com/<my-org>/
  - name: ado_organization_name
    type: string
    description: Azure DevOps Organization Name e.g. https://dev.azure.com/<my-org>
  - name: prefix
    type: string
    description: Desired infrastructure prefix for your OHDSI on Azure environment
    default: ohdsi
  - name: environment
    type: string
    description: Desired infrastructure environment for your OHDSI on Azure environment
    default: dev01
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
    env: BOOTSTRAP_RESOURCE_GROUP_NAME
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
    env: BOOTSTRAP_STORAGE_ACCOUNT_NAME
  - name: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: tfstate_file_name
    type: string
    default: "terraform.tfstate"
    description: "The file name of the Terraform state"
  - name: vocabularies_storage_account_name
    type: string
    description: "Your vocabularies storage account name e.g. <prefix><environment>omopsa"
  - name: vocabularies_container_path
    type: string
    default: "vocabularies/19-AUG-2021"
    description: "The Azure Storage Account container path for your vocabularies e.g. vocabularies/19-AUG-2021"
  - name: vocabularies_container_name
    type: string
    default: "vocabularies"
    description: "The Azure Storage Account container name for your vocabularies e.g. vocabularies"
  - name: vocabularies_search_pattern
    type: string
    default: "19-AUG-2021/*.csv"
    description: "Files to filter for within the Azure Storage Account for your vocabularies"
  - name: source_vocabularies_storage_account_name
    type: string
    default: "demovocabohdsionazure"
    description: "The source Azure Storage Account name for your vocabularies e.g. demovocabohdsionazure"
  - name: source_vocabularies_storage_account_container
    type: string
    default: "vocabularies"
    description: "The source Azure Storage Container name for your vocabularies e.g. vocabularies"
  - name: pipeline_branch_name
    type: string
    default: "main"
    description: "Run the specified branch for all pipelines, defaults to main"
  - name: environment_pipeline_name
    type: string
    default: "TF Apply OMOP Environment Pipeline"
    description: "Environment Pipeline name, defaults to 'TF Apply OMOP Environment Pipeline'"
  - name: environment_destroy_pipeline_name
    type: string
    default: "TF Destroy OMOP Environment Pipeline"
    description: "Environment Destroy Pipeline name, defaults to 'TF Destroy OMOP Environment Pipeline'"
  - name: vocabulary_build_pipeline_name
    type: string
    default: "Vocabulary Build Pipeline"
    description: "Vocabulary Build Pipeline name, defaults to 'Vocabulary Build Pipeline'"
  - name: vocabulary_release_pipeline_name
    type: string
    default: "Vocabulary Release Pipeline"
    description: "Vocabulary Release Pipeline name, defaults to 'Vocabulary Release Pipeline'"
  - name: broadsea_build_pipeline_name
    type: string
    default: "Broadsea Build Pipeline"
    description: "Broadsea Build Pipeline name, defaults to 'Broadsea Build Pipeline'"
  - name: broadsea_release_pipeline_name
    type: string
    default: "Broadsea Release Pipeline"
    description: "Broadsea Release Pipeline name, defaults to 'Broadsea Release Pipeline'"
  - name: build_id
    type: string
    default: "1"
    description: "Build ID"
  - name: check_seconds
    type: string
    default: "60"
    description: "How often to check (in seconds) for pipeline status, defaults to `60`"
  - name: check_retry_count
    type: string
    default: "20"
    description: "Number of times to retry to check for pipeline status, defaults to `20`"
  - name: log_search_pattern
    type: string
    default: "Your Administrator should run the following Azure CLI commands as part of your Azure SQL Server setup:"
    description: "Log Pattern to search for when adding members using Azure CLI."
  - name: include_debugging_output
    type: string
    default: "0"
    description: "Include debugging output, set to '1' to enable"

mixins:
  - az
  - docker
  - exec
  - terraform:
      clientVersion: 1.1.4
      workingDir: infra/terraform

#####################
## Install Command ##
#####################

install:
  # az login --service-principal -u someuser -p somepassword --tenant-id someguid
  - az:
      description: "az login"
      arguments:
        - login
      flags:
        service-principal:
        username: "{{ bundle.credentials.azure_client_id }}"
        password: "{{ bundle.credentials.azure_client_secret }}"
        tenant: "{{ bundle.credentials.azure_tenant_id }}"

  # Run bootstrap Terraform
  - exec:
      description: "Run Bootstrap Terraform"
      command: ./porter-scripts/install_bootstrap.sh
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        STORAGE_ACCOUNT_ACCESS_KEY: "{{ bundle.credentials.azure_storage_account_key }}"
        RESOURCE_GROUP_NAME: "{{ bundle.parameters.tfstate_resource_group_name }}"
        STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.tfstate_storage_account_name }}"
        CONTAINER_NAME: "{{ bundle.parameters.tfstate_container_name }}"
        TFSTATE_FILE_NAME: "{{ bundle.parameters.tfstate_file_name }}"
        TF_WORKING_DIRECTORY: "infra/terraform/bootstrap"
        PREFIX: "{{ bundle.parameters.prefix }}"
        ENVIRONMENT: "{{ bundle.parameters.environment }}"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

####################
## Helper Actions ##
####################

check-azure-linux-vmss-pool:
  # Check if Azure Linux VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Linux VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

check-azure-windows-vmss-pool:
  # Check if Azure Windows VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Windows VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-windows-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

check-pipeline-run:
  # Check pipeline run status for a given build id
  - exec:
      description: "Check Azure DevOps Pipeline Run"
      command: ./porter-scripts/check_pipeline_run.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BUILD_ID: "{{ bundle.parameters.build_id }}"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

check-pipeline-run-completed:
  # Check pipeline run status for a given build id until it is completed
  - exec:
      description: "Check Azure DevOps Pipeline Run"
      command: ./porter-scripts/check_pipeline_run_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BUILD_ID: "{{ bundle.parameters.build_id }}"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

#########################
## Environment Actions ##
#########################

deploy-environment:
  # Check if Azure Linux VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Linux VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

  # Update Environment pipeline permissions
  - exec:
      description: "Update tf plan Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-tf-plan-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Environment pipeline permissions
  - exec:
      description: "Update tf apply Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-tf-apply-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Environment pipeline queue permissions
  - exec:
      description: "Update tf apply Environment Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Run Terraform Environment Pipeline
  - exec:
      description: "Run Environment Terraform Pipeline"
      command: ./porter-scripts/setup_environment_pipeline.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        LOG_SEARCH_PATTERN: '"{{ bundle.parameters.log_search_pattern }}"'
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

run-environment-pipeline:
  # Check if Azure Linux VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Linux VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

  # Run Terraform Environment Pipeline
  - exec:
      description: "Run Environment Terraform Pipeline"
      command: ./porter-scripts/run_pipeline_check_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

run-add-members-after-environment-pipeline:
  # Run Terraform Environment Pipeline
  - exec:
      description: "Run Add Members script after Terraform Pipeline"
      command: ./porter-scripts/run_add_members_command_from_pipeline_build.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        BUILD_ID: "{{ bundle.parameters.build_id }}"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        LOG_SEARCH_PATTERN: '"{{ bundle.parameters.log_search_pattern }}"'

#################################
## Environment Destroy Actions ##
#################################

run-environment-destroy-pipeline:
  # Update Destroy Environment pipeline permissions
  - exec:
      description: "Update tf plan Destroy Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-tf-plan-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Destroy Environment pipeline permissions
  - exec:
      description: "Update tf apply Destroy Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-tf-apply-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Destroy Environment pipeline queue permissions
  - exec:
      description: "Update tf apply Destroy Environment Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Run Terraform Environment Destroy Pipeline
  # Need a teardown script e.g. wait until tf destroy pipeline completes
  - exec:
      description: "Run Environment Destroy Terraform Pipeline"
      command: ./porter-scripts/run_pipeline.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

########################
## Vocabulary Actions ##
########################

deploy-vocabulary:
  # Setup Vocabulary Files
  - exec:
      description: "Setup Vocabulary Files"
      command: ./porter-scripts/setup_vocabulary_files.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        VOCABULARIES_CONTAINER_PATH: "{{ bundle.parameters.vocabularies_container_path }}"
        STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.vocabularies_storage_account_name }}"
        RESOURCE_GROUP_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-rg"
        VOCABULARIES_CONTAINER_NAME: "{{ bundle.parameters.vocabularies_container_name }}"
        VOCABULARIES_SEARCH_PATTERN: '"{{ bundle.parameters.vocabularies_search_pattern }}"'
        SOURCE_VOCABULARIES_STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.source_vocabularies_storage_account_name }}"
        SOURCE_VOCABULARIES_STORAGE_ACCOUNT_CONTAINER: "{{ bundle.parameters.source_vocabularies_storage_account_container }}"

  # Check if Azure Linux VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Linux VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

  # Update Vocabulary Build Environment pipeline permissions
  - exec:
      description: "Update Vocabulary Build Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_build_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-vocabulary-build-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Vocabulary Release Environment pipeline permissions
  - exec:
      description: "Update Vocabulary Release Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_release_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-vocabulary-build-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Vocabulary Build pipeline queue permissions
  - exec:
      description: "Update Vocabulary Build Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_build_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-windows-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Vocabulary Release pipeline queue permissions
  - exec:
      description: "Update Vocabulary Release Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_release_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Run Vocabulary Build Pipeline and wait for completion
  - exec:
      description: "Run Vocabulary Build Pipeline and wait for completion"
      command: ./porter-scripts/run_pipeline_check_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_build_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Check if Azure Windows VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Windows VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-windows-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

  # Run Vocabulary Release Pipeline and wait for completion
  - exec:
      description: "Run Vocabulary Release Pipeline and wait for completion"
      command: ./porter-scripts/run_pipeline_check_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_release_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

run-setup-vocabulary-files:
  # Setup Vocabulary Files
  - exec:
      description: "Setup Vocabulary Files"
      command: ./porter-scripts/setup_vocabulary_files.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        VOCABULARIES_CONTAINER_PATH: "{{ bundle.parameters.vocabularies_container_path }}"
        STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.vocabularies_storage_account_name }}"
        RESOURCE_GROUP_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-rg"
        VOCABULARIES_CONTAINER_NAME: "{{ bundle.parameters.vocabularies_container_name }}"
        VOCABULARIES_SEARCH_PATTERN: '"{{ bundle.parameters.vocabularies_search_pattern }}"'
        SOURCE_VOCABULARIES_STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.source_vocabularies_storage_account_name }}"
        SOURCE_VOCABULARIES_STORAGE_ACCOUNT_CONTAINER: "{{ bundle.parameters.source_vocabularies_storage_account_container }}"

run-vocabulary-build-pipeline:
  # Run Vocabulary Build Pipeline
  - exec:
      description: "Run Vocabulary Build Pipeline"
      command: ./porter-scripts/run_pipeline.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_build_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

run-vocabulary-release-pipeline:
  # Check if Azure Windows VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Windows VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-windows-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

  # Run Vocabulary Release Pipeline
  - exec:
      description: "Run Vocabulary Release Pipeline"
      command: ./porter-scripts/run_pipeline.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Vocabulary"
        PIPELINE_NAME: '"{{ bundle.parameters.vocabulary_release_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

######################
## Broadsea Actions ##
######################

deploy-broadsea:
  # Check if Azure Linux VMSS Agent Pool is ready
  - exec:
      description: "Check Azure Linux VMSS Agent Pool is ready"
      command: ./porter-scripts/check_pipeline_pool.sh
      arguments:
        - '"$@"'
      flags:
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"

  # Update Broadsea Build Environment pipeline permissions
  - exec:
      description: "Update Broadsea Build Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_build_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-broadsea-build-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Broadsea Release Environment pipeline permissions
  - exec:
      description: "Update Broadsea Release Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_release_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-broadsea-release-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Broadsea Build pipeline queue permissions
  - exec:
      description: "Update Broadsea Build Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_build_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Broadsea Release pipeline queue permissions
  - exec:
      description: "Update Broadsea Release Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_release_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Run Broadsea Build Pipeline and wait for completion
  - exec:
      description: "Run Broadsea Build Pipeline and wait for completion"
      command: ./porter-scripts/run_pipeline_check_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_build_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Run Broadsea Release Pipeline and wait for completion
  - exec:
      description: "Run Broadsea Release Pipeline and wait for completion"
      command: ./porter-scripts/run_pipeline_check_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_release_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

run-broadsea-build-pipeline:
  # Run Broadsea Build Pipeline
  - exec:
      description: "Run Broadsea Build Pipeline"
      command: ./porter-scripts/run_pipeline.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_build_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

run-broadsea-release-pipeline:
  # Run Broadsea Release Pipeline
  - exec:
      description: "Run Broadsea Release Pipeline"
      command: ./porter-scripts/run_pipeline.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Broadsea"
        PIPELINE_NAME: '"{{ bundle.parameters.broadsea_release_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

#####################
## Upgrade Command ##
#####################

# TODO: Check upgrade can have more than one mixin?
upgrade:
  # Run bootstrap Terraform
  - exec:
      description: "Run Bootstrap Terraform"
      command: ./porter-scripts/install_bootstrap.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        STORAGE_ACCOUNT_ACCESS_KEY: "{{ bundle.credentials.azure_storage_account_key }}"
        RESOURCE_GROUP_NAME: "{{ bundle.parameters.tfstate_resource_group_name }}"
        STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.tfstate_storage_account_name }}"
        CONTAINER_NAME: "{{ bundle.parameters.tfstate_container_name }}"
        TFSTATE_FILE_NAME: "{{ bundle.parameters.tfstate_file_name }}"
        TF_WORKING_DIRECTORY: "infra/terraform/bootstrap"
        PREFIX: "{{ bundle.parameters.prefix }}"
        ENVIRONMENT: "{{ bundle.parameters.environment }}"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

  # Run Terraform Environment Pipeline
  - exec:
    description: "Run Environment Terraform Pipeline"
    command: ./porter-scripts/run_pipeline_check_completed.sh
    arguments:
      - '"$@"'
    flags:
      ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
      ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
      ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
      ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
      ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
      BRANCH: "/refs/heads/main"
      FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
      PIPELINE_NAME: "TF Apply OMOP Environment Pipeline"
      ADO_ORGANIZATION_NAME: "https://dev.azure.com/US-HLS-AppInnovations/"
      ADO_PROJECT_NAME: "OHDSIonAzure"
      ADO_PAT: "{{ bundle.credentials.ado_pat }}"
      CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
      CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
      INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

#######################
## Uninstall Command ##
#######################

uninstall:
  # Update Destroy Environment pipeline permissions
  - exec:
      description: "Update tf plan Destroy Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-tf-plan-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Destroy Environment pipeline permissions
  - exec:
      description: "Update tf apply Destroy Environment Pipeline permissions"
      command: ./porter-scripts/update_environment_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_ENVIRONMENT_NAME: '"{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-omop-tf-apply-environment"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Update Destroy Environment pipeline queue permissions
  - exec:
      description: "Update tf apply Destroy Environment Pipeline permissions"
      command: ./porter-scripts/update_elastic_pool_pipeline_assignment.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_QUEUE_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-ado-build-linux-vmss-agent-pool"
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"

  # Run Terraform Environment Destroy Pipeline
  # Need a teardown script e.g. wait until tf destroy pipeline completes
  - exec:
      description: "Run Environment Destroy Terraform Pipeline"
      command: ./porter-scripts/run_pipeline_check_completed.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        BRANCH: "{{ bundle.parameters.pipeline_branch_name }}"
        FOLDER_PATH: "OHDSIOnAzure\\{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}\\Terraform"
        PIPELINE_NAME: '"{{ bundle.parameters.environment_destroy_pipeline_name }}"'
        ADO_ORGANIZATION_NAME: "{{ bundle.parameters.ado_organization_url }}"
        ADO_PROJECT_NAME: "{{ bundle.parameters.prefix }}-{{ bundle.parameters.environment }}-OHDSIonAzure"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"
        CHECK_SECONDS: "{{ bundle.parameters.check_seconds }}"
        CHECK_RETRY_COUNT: "{{ bundle.parameters.check_retry_count }}"
        INCLUDE_DEBUGGING_OUTPUT: "{{ bundle.parameters.include_debugging_output }}"
        SKIP_IF_DEPENDENT_PIPELINE_IS_NOT_COMPLETE: "1" # skip this step if the dependent pipeline did not complete successfully
        CHECK_DEPENDENT_PIPELINE_NAME: '"{{ bundle.parameters.environment_pipeline_name }}"'


  - exec:
      description: "Run Uninstall Bootstrap Terraform"
      command: ./porter-scripts/uninstall_bootstrap.sh
      arguments:
        - '"$@"'
      flags:
        ARM_CLIENT_ID: "{{ bundle.credentials.azure_client_id }}"
        ARM_CLIENT_OBJECT_ID: "{{ bundle.credentials.azure_client_object_id }}"
        ARM_CLIENT_SECRET: "{{ bundle.credentials.azure_client_secret }}"
        ARM_TENANT_ID: "{{ bundle.credentials.azure_tenant_id }}"
        ARM_SUBSCRIPTION_ID: "{{ bundle.credentials.azure_subscription_id }}"
        STORAGE_ACCOUNT_ACCESS_KEY: "{{ bundle.credentials.azure_storage_account_key }}"
        RESOURCE_GROUP_NAME: "{{ bundle.parameters.tfstate_resource_group_name }}"
        STORAGE_ACCOUNT_NAME: "{{ bundle.parameters.tfstate_storage_account_name }}"
        CONTAINER_NAME: "{{ bundle.parameters.tfstate_container_name }}"
        TFSTATE_FILE_NAME: "{{ bundle.parameters.tfstate_file_name }}"
        TF_WORKING_DIRECTORY: "infra/terraform/bootstrap"
        PREFIX: "{{ bundle.parameters.prefix }}"
        ENVIRONMENT: "{{ bundle.parameters.environment }}"
        ADO_PAT: "{{ bundle.credentials.ado_pat }}"

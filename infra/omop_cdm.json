{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "13237815717109159882"
    }
  },
  "parameters": {
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "branchName": {
      "type": "string",
      "defaultValue": "v2",
      "metadata": {
        "description": "Used to download the sql scripts from the GitHub repository, this should point to the branch you want to use"
      }
    },
    "cdmContainerUrl": {
      "type": "securestring",
      "metadata": {
        "description": "The URL of the container where the CDM data is stored"
      }
    },
    "cdmSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The SAS token to access the CDM data"
      }
    },
    "pgAtlasDatabaseName": {
      "type": "securestring",
      "metadata": {
        "description": "The name of webapi CDM database"
      }
    },
    "pgCDMDatabaseName": {
      "type": "securestring",
      "metadata": {
        "description": "The name of the OMOP CDM database"
      }
    },
    "pgAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the postgres server"
      }
    },
    "pgWebapiAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the webapi database"
      }
    },
    "pgCDMpassword": {
      "type": "securestring",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "Password for the cdm user"
      }
    },
    "pgServerName": {
      "type": "securestring"
    },
    "keyvaultName": {
      "type": "securestring"
    }
  },
  "variables": {
    "$fxv#0": "#!/bin/bash\n\n# install postgresql client\necho 'installing psql...'\napk --update add postgresql-client gettext\n\n# create OMOP CDM schema and user\nexport pg_cdm_password=\"${PG_CDM_PASSWORD}${PG_CDM_USERNAME}\"\nexport cdm_md5=\"'md5$(echo -n $pg_cdm_password | md5sum | awk '{ print $1 }')'\"\n\nprintf 'Creating omp cdm schemas and user\\n'\ncreate_omop_cdm_script=$(envsubst < create_omop_cdm.sql)\necho \"$create_omop_cdm_script\" | psql \"$OMOP_CONNECTION_STRING\"\n\n# create OMOP CDM tables\nprintf 'Creating OMOP CDM tables\\n'\nsed -i  s/@cdmDatabaseSchema/${OMOP_CDM_SCHEMA_NAME}/g OMOPCDM_postgresql_5.4_ddl.sql OMOPCDM_postgresql_5.4_constraints.sql OMOPCDM_postgresql_5.4_primary_keys.sql OMOPCDM_postgresql_5.4_indices.sql\npsql \"$OMOP_CONNECTION_STRING\" -f OMOPCDM_postgresql_5.4_ddl.sql\n\n#TODO create and load OMOP Vocabulary & Results tables\n\n# skip foreign key constraints for now due to open bug - https://github.com/OHDSI/CommonDataModel/issues/452\n#psql \"$OMOP_CONNECTION_STRING\" -f OMOPCDM_postgresql_5.4_constraints.sql\n\n# create OMOP CDM primary keys\nprintf 'Creating OMOP CDM primary keys\\n'\npsql \"$OMOP_CONNECTION_STRING\" -f OMOPCDM_postgresql_5.4_primary_keys.sql\n\n# load OMOP CDM data\n#tables=(\"cdm.concept_ancestor\" \"cdm.concept_relationship\" \"cdm.source_to_source_vocab_map\" \"cdm.source_to_standard_vocab_map\" \"cdm.concept\" \"cdm.drug_strength\" \"cdm.concept_synonym\" \"cdm.measurement\" \"cdm.observation\" \"cdm.cost\" \"cdm.assign_all_visit_ids\" \"cdm.visit_detail\" \"cdm.visit_occurrence\" \"cdm.all_visits\" \"cdm.payer_plan_period\" \"cdm.drug_exposure\" \"cdm.procedure_occurrence\" \"cdm.final_visit_ids\" \"cdm.condition_occurrence\" \"cdm.condition_era\" \"cdm.provider\" \"cdm.drug_era\" \"cdm.person\" \"cdm.relationship\" \"cdm.observation_period\" \"cdm.concept_class\" \"cdm.device_exposure\" \"cdm.death\" \"cdm.cdm_source\" \"cdm.vocabulary\" \"cdm.domain\")\n#load subset of tables for now to speed up testing\nprintf 'Loading OMOP CDM data\\n'\ntables=(\"cdm.all_visits\" \"cdm.person\" \"cdm.drug_era\" \"cdm.death\")\nn=${#tables[@]}\ni=0\nfor element in \"${tables[@]}\"; do\n    ((i++));\n    printf \"Downloading and extracting: %s (%s)\\n\" \"$element.csv.gz\" \"$i/$n\"\n    curl \"${CDM_CONTAINER_URL}$element.csv.gz${CDM_SAS_TOKEN}\" | gunzip > $element.csv\n    num_of_records=$(wc -l $element.csv | awk '{print $1}')\n    printf \"Copying %s to table: %s\\n\" \"$num_of_records\" \"$element\"\n    psql \"$OMOP_CONNECTION_STRING\" -c \"\\COPY $element FROM '$element.csv' WITH CSV;\"\n    printf \"done\"\ndone\n\n# create OMOP CDM indices\nprintf 'creating OMOP CDM indices\\n'\n#psql \"$OMOP_CONNECTION_STRING\" -f OMOPCDM_postgresql_5.4_indices.sql;\n\n# add OMOP CDM source to WebAPI\nprintf 'adding OMOP CDM source to WebAPI\\n'\nadd_omop_source_script=$(envsubst < add_omop_source.sql)\necho \"$add_omop_source_script\" | psql \"$ATLAS_DB_CONNECTION_STRING\"\n",
    "pgOMOPCDMSchemaName": "cdm",
    "pgOMOPVocabularySchemaName": "vocabulary",
    "pgOMOPResultsSchemaName": "results",
    "pgOMOPTempSchemaName": "temp",
    "pgOMOPCDMRole": "cdm_reader",
    "pgCDMUsername": "cdm_user",
    "pgCDMUserSecretName": "[format('{0}-cdm-user-password', parameters('pgCDMDatabaseName'))]",
    "pgWebAPISchemaName": "webapi",
    "pgWebapiAdminUsername": "ohdsi_admin_user",
    "pgAdminUsername": "postgres_admin"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), variables('pgCDMUserSecretName'))]",
      "properties": {
        "value": "[parameters('pgCDMpassword')]"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2022-12-01",
      "name": "[format('{0}/{1}', parameters('pgServerName'), parameters('pgCDMDatabaseName'))]",
      "properties": {
        "charset": "utf8",
        "collation": "en_US.utf8"
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "id-deploy-script",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "runBashWithOutputs",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-deploy-script'))]": {}
        }
      },
      "properties": {
        "forceUpdateTag": "[parameters('utcValue')]",
        "azCliVersion": "2.42.0",
        "timeout": "PT60M",
        "environmentVariables": [
          {
            "name": "ATLAS_DB_CONNECTION_STRING",
            "secureValue": "[format('host={0} port=5432 dbname={1} user={2} password={3} sslmode=require', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('pgServerName')), '2022-12-01').fullyQualifiedDomainName, parameters('pgAtlasDatabaseName'), variables('pgWebapiAdminUsername'), parameters('pgWebapiAdminPassword'))]"
          },
          {
            "name": "OMOP_CONNECTION_STRING",
            "secureValue": "[format('host={0} port=5432 dbname={1} user={2} password={3} sslmode=require', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('pgServerName')), '2022-12-01').fullyQualifiedDomainName, parameters('pgCDMDatabaseName'), variables('pgAdminUsername'), parameters('pgAdminPassword'))]"
          },
          {
            "name": "ATLAS_DATABASE_NAME",
            "value": "[parameters('pgAtlasDatabaseName')]"
          },
          {
            "name": "CDM_DATABASE_NAME",
            "value": "[parameters('pgCDMDatabaseName')]"
          },
          {
            "name": "PG_ADMIN_USERNAME",
            "value": "[variables('pgAdminUsername')]"
          },
          {
            "name": "PG_ADMIN_PASSWORD",
            "secureValue": "[parameters('pgAdminPassword')]"
          },
          {
            "name": "PG_CDM_USERNAME",
            "value": "[variables('pgCDMUsername')]"
          },
          {
            "name": "PG_CDM_PASSWORD",
            "secureValue": "[parameters('pgCDMpassword')]"
          },
          {
            "name": "CDM_CONTAINER_URL",
            "value": "[parameters('cdmContainerUrl')]"
          },
          {
            "name": "CDM_SAS_TOKEN",
            "value": "[parameters('cdmSasToken')]"
          },
          {
            "name": "WEBAPI_SCHEMA_NAME",
            "value": "[variables('pgWebAPISchemaName')]"
          },
          {
            "name": "OMOP_CDM_SCHEMA_NAME",
            "value": "[variables('pgOMOPCDMSchemaName')]"
          },
          {
            "name": "OMOP_VOCABULARY_SCHEMA_NAME",
            "value": "[variables('pgOMOPVocabularySchemaName')]"
          },
          {
            "name": "OMOP_RESULTS_SCHEMA_NAME",
            "value": "[variables('pgOMOPResultsSchemaName')]"
          },
          {
            "name": "OMOP_TEMP_SCHEMA_NAME",
            "value": "[variables('pgOMOPTempSchemaName')]"
          },
          {
            "name": "OMOP_CDM_ROLE",
            "value": "[variables('pgOMOPCDMRole')]"
          }
        ],
        "scriptContent": "[variables('$fxv#0')]",
        "supportingScriptUris": [
          "https://raw.githubusercontent.com/OHDSI/CommonDataModel/main/inst/ddl/5.4/postgresql/OMOPCDM_postgresql_5.4_ddl.sql",
          "https://raw.githubusercontent.com/OHDSI/CommonDataModel/main/inst/ddl/5.4/postgresql/OMOPCDM_postgresql_5.4_constraints.sql",
          "https://raw.githubusercontent.com/OHDSI/CommonDataModel/main/inst/ddl/5.4/postgresql/OMOPCDM_postgresql_5.4_primary_keys.sql",
          "https://raw.githubusercontent.com/OHDSI/CommonDataModel/main/inst/ddl/5.4/postgresql/OMOPCDM_postgresql_5.4_indices.sql",
          "[format('https://raw.githubusercontent.com/microsoft/OHDSIonAzure/{0}/templates/ohdsi-webapi/sql/create_omop_schemas.sql', parameters('branchName'))]",
          "[format('https://raw.githubusercontent.com/microsoft/OHDSIonAzure/{0}/templates/ohdsi-webapi/sql/add_omop_source.sql', parameters('branchName'))]"
        ],
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P10M"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-deploy-script')]"
      ]
    }
  ]
}
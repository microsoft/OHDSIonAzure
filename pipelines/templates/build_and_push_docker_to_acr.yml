parameters:

- name: serviceConnection # Service Connection used to connect to Azure SQL
  default: ''
  displayName: Service Connection Used to connect to Azure SQL
- name: containerRegistry # Container Registry Name, e.g. for "<myContainerRegistry>.azurecr.io" use "myContainerRegistry".  Default is empty.
  default: ''
  displayName: Container Registry Name, e.g. for "<myContainerRegistry>.azurecr.io" use "myContainerRegistry".  Default is empty.
- name: imageName # Image Name (e.g. my-image) to push into ACR.  Defaults to empty.
  default: ''
  displayName: Image Name (e.g. my-image) to push into ACR.  Defaults to empty.
- name: imageTag # Image Tag (e.g. latest) to push into ACR.  Defaults to empty.
  default: ''
  displayName: Image Tag (e.g. latest) to push into ACR.  Defaults to empty.
- name: sourceFolder # Source Folder used for docker build, e.g. if the folder 'my-folder' has the Dockerfile, specify 'my-folder'.  Defaults to empty.
  default: ''
  displayName: Source Folder used for docker build, e.g. if the folder 'my-folder' has the Dockerfile, specify 'my-folder'.  Defaults to empty.

steps:
# Run the script using sqlcmd
- task: AzureCLI@2
  displayName: 'Build and Push ${{ parameters.imageName}} to ACR'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      # confirm the pool can reach ACR
      nslookup "${{ parameters.containerRegistry }}.azurecr.io"

      token=$(az account get-access-token --query accessToken --output tsv)
      az acr login -n "${{ parameters.containerRegistry }}"

      # test to see the list of images in ACR.
      az acr repository list -n "${{ parameters.containerRegistry }}"

      TOKEN=$(az acr login --name "${{ parameters.containerRegistry }}" --expose-token --output tsv --query accessToken)

      sudo docker login ${{ parameters.containerRegistry }}.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password $TOKEN

      # docker build from this folder
      cd "${{ parameters.sourceFolder }}"

      sudo docker build -t "${{ parameters.containerRegistry }}.azurecr.io/${{ parameters.imageName }}:${{ parameters.imageTag }}" -t "${{ parameters.containerRegistry }}.azurecr.io/${{ parameters.imageName }}:$(Build.BuildNumber)" .
      sudo docker push --all-tags "${{ parameters.containerRegistry }}.azurecr.io/${{ parameters.imageName }}"

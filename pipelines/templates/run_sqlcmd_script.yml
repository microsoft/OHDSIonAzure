parameters:

- name: serviceConnection # Service Connection used to connect to Azure SQL
  default: ''
  displayName: Service Connection Used to connect to Azure SQL
- name: sqlServerName # SqlServerName, e.g. for <my-sql-server-name>.database.windows.net use my-sql-server-name
  default: ''
  displayName: SQL Server Name, e.g. for <my-sql-server-name>.database.windows.net use my-sql-server-name
- name: sqlServerDbName # SQL Server DB Name
  default: ''
  displayName: SQL Database Name
- name: sourceFolderPath # Source Folder Path e.g. if the script is located at /artifacts/SomeScript/script.sql use /artifacts/SomeScript.  Defaults to empty.
  default: ''
  displayName: Source Folder Path e.g. if the script is located at /artifacts/SomeScript/script.sql use /artifacts/SomeScript.  Defaults to empty.
- name: scriptFileName # Script File Name
  default: ''
  displayName: SQL Script File Name
- name: sqlcmdCommandLineParameters # SQLCMD additional parameters
  default: ''
  displayName: SQLCMD Command Line Parameters, e.g. -v somevariable="somevalue". Default to empty. Note the connection information is handled through the template.

steps:
# Run the script using sqlcmd
- task: AzureCLI@2
  displayName: 'Run ${{ parameters.scriptFileName }} Script using Service Connection'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    addSpnToEnvironment: true
    inlineScript: |
      echo '******************Copy Script******************'
      sudo cp '${{ parameters.sourceFolderPath }}/${{ parameters.scriptFileName }}' '${{ parameters.scriptFileName }}'

      ls -l

      echo '******************Get Access Token******************'

      az account show

      # save access token to file for use with -P and -G flag
      # https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/connecting-with-sqlcmd?view=sql-server-ver15
      az account get-access-token --resource https://database.windows.net --output tsv | cut -f 1 | tr -d '\n' | iconv -f ascii -t UTF-16LE > /tmp/tokenFile

      sudo apt-get update
      sudo apt-get install dnsutils -y

      echo '****************Checking without private link resolution******************'
      echo 'nslookup "${{ parameters.sqlServerName }}.database.windows.net"'
      nslookup "${{ parameters.sqlServerName }}.database.windows.net"

      echo '****************Run SQL CMD******************'
      echo '******Run ${{ parameters.scriptFileName }} Script******'

      echo 'sqlcmd -G -P /tmp/tokenFile -S "${{ parameters.sqlServerName }}.database.windows.net" -d "${{ parameters.sqlServerDbName }}" -i "${{ parameters.scriptFileName }}" ${{ parameters.sqlcmdCommandLineParameters}}'
      sqlcmd -G -P /tmp/tokenFile -S "${{ parameters.sqlServerName }}.database.windows.net" -d "${{ parameters.sqlServerDbName }}" -i "${{ parameters.scriptFileName }}" ${{ parameters.sqlcmdCommandLineParameters}}

      # Clean up token
      rm -rf /tmp/tokenFile

---
name: Deploy OHDSI on Azure in Demo Environment
# This workflow is the integration build run for pushes to the main branch
# It also runs on a schedule, serving as the nightly build

on:  # yamllint disable-line rule:truthy
  schedule:
    # 1am each night https://crontab.guru/#0_1_*_*_*
    - cron: "0 1 * * *"
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# This will prevent multiple runs of this entire workflow.
# We should NOT cancel in progress runs as that can destabilize the environment.
concurrency: "${{ github.workflow }}-${{ github.ref }}"

###############
# Set the Job #
###############
jobs:
  deploy_demo_environment:
    # Name the Job
    name: Deploy OHDSI On Azure in Demo Environment
    # Set the agent to run on
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: demo

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4

      - name: Terraform format check
        id: terraform_fmt
        run: terraform fmt -check -recursive

      - name: Setup Porter
        id: setup_porter
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.BOOTSTRAP_TF_STATE_STORAGE_ACCOUNT_KEY }}
        run: |
          prefix="${{ secrets.PREFIX }}"
          environment=${{ secrets.ENVIRONMENT }}

          # Set environment variables for use with demo environment
          # shellcheck disable=SC2086,SC2129
          echo "prefix=$prefix" >> $GITHUB_ENV

          # shellcheck disable=SC2086,SC2129
          echo "environment=$environment" >> $GITHUB_ENV

          CONTAINER_NAME="$prefix-$environment-tfstate"

          az login --service-principal -u "${{ secrets.ARM_CLIENT_ID }}" -p "${{ secrets.ARM_CLIENT_SECRET }}" --tenant "${{ secrets.ARM_TENANT_ID }}"

          chmod +x "${PWD}/setup.sh"
          chmod 775 "${PWD}/setup-porter.sh"
          chmod -R +x "${PWD}/porter-scripts"

          # Use an existing Azure Demo SP
          ./setup.sh \
            --AZURE_CLIENT_ID "${{ secrets.ARM_CLIENT_ID }}" \
            --AZURE_CLIENT_OBJECT_ID "${{ secrets.ARM_CLIENT_OBJECT_ID }}" \
            --AZURE_CLIENT_SECRET "${{ secrets.ARM_CLIENT_SECRET }}" \
            --AZURE_TENANT_ID "${{ secrets.ARM_TENANT_ID }}" \
            --AZURE_SUBSCRIPTION_ID "${{ secrets.ARM_SUBSCRIPTION_ID }}" \
            --BOOTSTRAP_TF_BACKEND_STORAGE_ACCOUNT_NAME "${{ secrets.BOOTSTRAP_TF_STATE_STORAGE_ACCOUNT }}" \
            --BOOTSTRAP_TF_BACKEND_RESOURCE_GROUP_NAME "${{ secrets.BOOTSTRAP_TF_STATE_RG }}" \
            --BOOTSTRAP_TF_BACKEND_STORAGE_ACCOUNT_CONTAINER_NAME "$CONTAINER_NAME" \
            --ADO_PAT "${{ secrets.ADO_PAT }}" \
            --OMOP_PASSWORD "${{ secrets.OMOP_PASSWORD }}" \
            --ADMIN_USER_JUMPBOX "${{ secrets.ADMIN_USER_JUMPBOX }}" \
            --ADMIN_PASSWORD_JUMPBOX "${{ secrets.ADMIN_PASSWORD_JUMPBOX }}" \
            --ADMIN_USER "${{ secrets.ADMIN_USER }}" \
            --ADMIN_PASSWORD "${{ secrets.ADMIN_PASSWORD }}" \
            --PREFIX "$prefix" \
            --ENVIRONMENT "$environment" \
            --ADO_ORGANIZATION_NAME "${{ secrets.ADO_ORGANIZATION_NAME }}" \
            --CREATE_NEW_AZURE_SERVICE_PRINCIPAL "${{ secrets.CREATE_NEW_AZURE_SERVICE_PRINCIPAL }}" \
            --INCLUDE_KEY_VAULT_PORTER_SECRETS "${{ secrets.INCLUDE_KEY_VAULT_PORTER_SECRETS }}"

          chmod +x "${PWD}/$prefix-$environment-OHDSIOnAzure.env"
          # shellcheck disable=SC1090
          source "${PWD}/$prefix-$environment-OHDSIOnAzure.env"

      - name: Run Porter Build
        id: run_porter_build
        run: |
          # shellcheck disable=SC1090
          source "${PWD}/$prefix-$environment-OHDSIOnAzure.env"

          porter build --debug

      - name: Run Porter Install
        id: run_porter_install
        run: |
          # shellcheck disable=SC1090
          source "${PWD}/$prefix-$environment-OHDSIOnAzure.env"

          # TODO: link creds to kv
          porter install \
            --cred ./creds-from-env-vars.json \
            -p ./parameters.json

      - name: Run Porter Deploy Environment
        id: run_porter_deploy_environment
        run: |
          # shellcheck disable=SC1090
          source "${PWD}/$prefix-$environment-OHDSIOnAzure.env"

          # TODO: link creds to kv
          porter invoke \
            --action deploy-environment \
            --cred ./creds-from-env-vars.json \
            -p ./parameters.json

      - name: Run Porter Deploy Vocabulary
        id: run_porter_deploy_vocabulary
        run: |
          # shellcheck disable=SC1090
          source "${PWD}/$prefix-$environment-OHDSIOnAzure.env"

          # TODO: link creds to kv
          porter invoke \
            --action deploy-vocabulary \
            --cred ./creds-from-env-vars.json \
            -p ./parameters.json

      - name: Run Porter Deploy Broadsea
        id: run_porter_deploy_broadsea
        run: |
          # shellcheck disable=SC1090
          source "${PWD}/$prefix-$environment-OHDSIOnAzure.env"

          # TODO: link creds to kv
          porter invoke \
            --action deploy-broadsea \
            --cred ./creds-from-env-vars.json \
            -p ./parameters.json

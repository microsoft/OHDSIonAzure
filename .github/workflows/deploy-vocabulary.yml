---
name: Deploy Vocabulary to OHDSI on Azure in Demo Environment
# This workflow is the integration build run for pushes to the main branch
# It also runs on a schedule, serving as the nightly build

on:  # yamllint disable-line rule:truthy
  schedule:
    # 3am each night https://crontab.guru/#0_1_*_*_*
    - cron: "0 3 * * *"
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# This will prevent multiple runs of this entire workflow.
# We should NOT cancel in progress runs as that can destabilize the environment.
concurrency: "${{ github.workflow }}-${{ github.ref }}"

###############
# Set the Job #
###############
jobs:
  run_terraform:
    # Name the Job
    name: Deploy Vocabulary
    # Set the agent to run on
    runs-on: ubuntu-latest
    environment: demo

    ##################
    # Load all steps #
    ##################
    steps:
      # Copy over vocabulary into Azure Storage Account
      - name: Copy Vocabulary Files to Azure Storage
        id: copy_vocabulary_files_to_azure_storage
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.BOOTSTRAP_TF_STATE_STORAGE_ACCOUNT_KEY }}
        run: |
          #!/bin/bash
          az login --service-principal -u "${{ secrets.ARM_CLIENT_ID }}" -p "${{ secrets.ARM_CLIENT_SECRET }}" --tenant "${{ secrets.ARM_TENANT_ID }}"

          echo "------------------------ SMOKE TEST: VALIDATE VOCAB FILES ------------------------"
          # shellcheck disable=SC2116,SC2296
          vocabContainerPath=$(echo "${{ secrets.VOCABULARIES_CONTAINER_PATH }}")
          # This assumes that the vocabularies have a form of vocabularies/some/path e.g. vocabularies/02-SEP-21
          # shellcheck disable=SC2207,SC2086
          vocabContainerPathArr=($(echo $vocabContainerPath | tr "/" "\n"))
          # shellcheck disable=SC2116,SC2086
          vocabContainerName=$(echo ${vocabContainerPathArr[0]})
          vocabPrefix=""
          if [ ${#vocabContainerPathArr[*]} -gt 1 ]; then
            printf -v vocabPrefix "%s/" "${vocabContainerPathArr[@]:1}"
            vocabPrefix=${vocabPrefix%?} # remove last character
          else
            echo "Unable to detect rest of vocabulary container path, so will proceed with searching for an empty string"
          fi
          echo "Searching for Prefix $vocabPrefix in Container $vocabContainerName"
          # sanity check
          az storage blob list -c "$vocabContainerName" --account-name "${{ secrets.STORAGE_ACCOUNT_NAME }}" --prefix "$vocabPrefix" -o tsv
          # shellcheck disable=SC2207
          blobArr=($(az storage blob list -c "$vocabContainerName" --account-name "${{ secrets.STORAGE_ACCOUNT_NAME }}" --prefix "$vocabPrefix" | jq '.[].name'))
          # shellcheck disable=SC2128,SC2086
          echo $blobArr

          if [ ${#blobArr[*]} -gt 0 ]; then
            echo 'Vocabulary files exists, skipping vocabulary files copy'
          else
            echo "Vocabulary files not found!"
            echo "Could not find vocabulary files in vocabContainerPath $vocabContainerPath in the storage account"
            echo "Proceeding to copy files from demo vocabulries azure storage account"

            # Copy vocabulary files from the demo storage account into environment storage account
            # Note the pattern will be after the container name e.g. 10-SEP-21\* will match the virtual folder in the vocabularies container
            az storage blob copy start-batch \
              --account-key ${{ secrets.STORAGE_ACCOUNT_KEY }} \
              --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
              --destination-container ${{ secrets.VOCABULARIES_CONTAINER_NAME }} \
              --pattern ${{ secrets.VOCABULARIES_SEARCH_PATTERN }} \
              --source-account-key ${{ secrets.SOURCE_VOCABULARIES_STORAGE_ACCOUNT_KEY }} \
              --source-account-name ${{ secrets.SOURCE_VOCABULARIES_STORAGE_ACCOUNT_NAME }} \
              --source-container ${{ secrets.SOURCE_VOCABULARIES_STORAGE_ACCOUNT_CONTAINER }}
          fi

      # Call Vocabulary Build Pipeline
      # TODO: Need to check if the agent pool is ready first.
      - name: Azure Pipelines Action
        uses: Azure/pipelines@v1
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          azure-devops-project-url: ${{ secrets.ADO_PROJECT_URL }} # e.g. https://dev.azure.com/<my-org>/<my-project>
          azure-pipeline-name: ${{ secrets.VOCABULARY_BUILD_PIPELINE_NAME }}
          azure-devops-token: '${{ secrets.ADO_PAT }}'

      # Call Vocabulary Release Pipeline
      # TODO: Need to check if the agent pool is ready first.
      - name: Azure Pipelines Action
        uses: Azure/pipelines@v1
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          azure-devops-project-url: ${{ secrets.ADO_PROJECT_URL }} # e.g. https://dev.azure.com/<my-org>/<my-project>
          azure-pipeline-name: ${{ secrets.VOCABULARY_RELEASE_PIPELINE_NAME }}
          azure-devops-token: '${{ secrets.ADO_PAT }}'
